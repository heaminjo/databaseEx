-- 직원 테이블
CREATE TABLE Employees (
    EMP_ID INT PRIMARY KEY,   -- 직원 ID (기본키)
    EMP_Name VARCHAR(50),
    DEPT_ID int,
    SALALY INT
);

SELECT * FROM DEPT;
-- 직원 데이터 추가
insert into Employees values (1,'김길동',2,1000000);
insert into Employees values (2,'나가랑',1,20003000);
insert into Employees values (3,'박영철',1,1010000);
insert into Employees values (4,'조해민',3,304000);
insert into Employees values (5,'홍길동',2,60000);
insert into Employees values (6,'하로로',3,1000000);
insert into Employees values (7,'서장훈',1,2999999);
insert into Employees values (8,'박나래',1,5000000);
insert into Employees values (9,'오나리',3,500000);
insert into Employees values (10,'이나영',2,104000);
insert into Employees values (11,'신아영',4,600630);
insert into Employees values (12,'백제리',4,1999399);
insert into Employees values (13,'우라아',4,499999);
insert into Employees values (14,'김철이',4,1000000);
-- with rollup 전체 합계
SELECT DEPT_ID,SUM(SALALY) 
FROM EMPLOYEES
GROUP BY dept_id with rollup;

-- with rollup 그룹별 합계와 총 합계
-- GROUPING 
SELECT DEPT_ID,grouping(DEPT_ID) AS "부서 합계",
		EMP_NAME ,grouping(EMP_NAME) AS "DD",
        SUM(SALALY)
FROM EMPLOYEES
group by EMP_NAME,DEPT_ID with rollup;

SELECT DEPT_ID,EMP_NAME,SUM(SALALY)
FROM EMPLOYEES
GROUP BY DEPT_ID ,EMP_ID with rollup;

-- CUBE
SELECT DEPT_ID , EMP_NAME ,NUM(SALALY)
FROM EMPLOYEES
group by DEPT_ID,EMP_ID;

SELECT * FROM EMPLOYEES;

-- 윈도우 함수 
-- 행과 행관의 관계 (순위, 합계, 평균 ,행)

-- 직원의 월급 순위
SELECT EMP_NAME,SALALY,
	   rank() over (order by SALALY DESC) AS "순위",
	   dense_rank() OVER (ORDER BY SALALY DESC) AS DENSE_RANK_NO,
       row_number() OVER (order by SALALY DESC) AS ROW_NUM
       FROM EMPLOYEES;
 
-- RANK는 공동 1등이 나온다면 그 두명에게 1등을 주고 다음순위는 3위 부터 시작 
-- DENSE_RANK 는 공동 1등이 나온다면 똑같이 1등을 주고 다음순위는 2위 부터 시작
-- ROW_NUMBER는 공동 1등이 나와도 각각 1등 2등 부여

-- 집계함수

-- 부서별 직원의 누적 급여계산
-- PARTITION BY : 지정한 칼럼을 그룹화
-- 윈도우 함수 전에는 OVER 가 필수 키워드로 들어간다.
SELECT EMP_NAME AS "이름",
	   DEPT_ID AS "부서",
       SALALY AS "월급",
		SUM(SALALY) OVER (partition by DEPT_ID order by EMP_NAME) AS "부서별 합계" -- 파티션별로 월급(SALALY)의 합계를 이름 순으로 정렬
        FROM EMPLOYEES;
-- 부서별로 정리하며 부서 내부에서 이름 순으로 정렬
-- 합계가 한번에 하나로 집계되서 나오는 것이 아니라 행마다 합계가 누적되서 집계된다.

-- 그룹별 행 개수(COUNT)
-- GROUP BY 와 다른 것은 각 그룹을 하나의 행으로씩 줄인다.
-- 윈도우 함수는 행을 집약하지않고 전부 그대로 출력하며 행 수도 나란히 출력
SELECT DEPT_ID, COUNT(*) OVER (PARTITION BY DEPT_ID)
FROM EMPLOYEES;


-- 직원간의 월급 비교
-- LAG : 이전 행을 가지고 온다
-- LEAD : 특정 위치의 행을 가지고온다 (default 1)
SELECT EMP_NAME AS "이름",
	   DEPT_ID AS "부서",
       SALALY AS "월급",
       LAG(SALALY) OVER (ORDER BY EMP_NAME) AS "이전 직원의 월급",
       LEAD(SALALY) OVER (ORDER BY EMP_NAME) AS "다음 직원의 월급"
FROM EMPLOYEES;


-- 부서 내에서 가장 급여가 많은 사람
-- FIRST_VALUE : 가장 첫번째 행을 가지고 온다.
SELECT EMP_NAME AS "이름",
	   DEPT_ID AS "부서",
       FIRST_VALUE(EMP_NAME) OVER (PARTITION BY DEPT_ID ORDER BY SALALY DESC) AS "가장 많은 사람",
       FIRST_VALUE(SALALY) OVER (PARTITION BY DEPT_ID ORDER BY SALALY DESC) AS "1등 월급 액수"
FROM EMPLOYEES;
